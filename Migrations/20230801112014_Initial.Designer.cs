// <auto-generated />
using System;
using DatingSite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatingSite.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230801112014_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("DatingSite.Data.Models.Anket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InteractionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Like")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("See")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InteractionId");

                    b.ToTable("Anket");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Blank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferSex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blanks");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AnketId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BlankId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ChatsId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatsId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Chats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Interaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Interactions");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Interested", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Interesteds");
                });

            modelBuilder.Entity("DatingSite.Data.Models.InterestedUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InterestedId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InterestedId");

                    b.ToTable("InterestedUsers");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ChatId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Reading")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("DatingSite.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BlankId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Anket", b =>
                {
                    b.HasOne("DatingSite.Data.Models.Interaction", null)
                        .WithMany("UsersAnkets")
                        .HasForeignKey("InteractionId");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Chat", b =>
                {
                    b.HasOne("DatingSite.Data.Models.Chats", null)
                        .WithMany("UserChats")
                        .HasForeignKey("ChatsId");
                });

            modelBuilder.Entity("DatingSite.Data.Models.InterestedUser", b =>
                {
                    b.HasOne("DatingSite.Data.Models.Interested", null)
                        .WithMany("Users")
                        .HasForeignKey("InterestedId");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Message", b =>
                {
                    b.HasOne("DatingSite.Data.Models.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Chats", b =>
                {
                    b.Navigation("UserChats");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Interaction", b =>
                {
                    b.Navigation("UsersAnkets");
                });

            modelBuilder.Entity("DatingSite.Data.Models.Interested", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
