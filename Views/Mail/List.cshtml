@using System.Linq

@model IEnumerable<Chat>

@{
    string message = "The user reciprocated! Start a chat.";
    string CountUnreadMessages(Chat chat)
    {
        chat!.Messages?.Reverse();
        var result = chat.Messages is null ? "" : chat.Messages.TakeWhile(c => !c.Reading).Count().ToString();
        chat!.Messages?.Reverse();
        
        return result;
    }
}
<h1>Messages</h1>
<div class="my-3 p-3 bg-white rounded box-shadow">
        @{
            if(@Model.Count() == 0)
            {
                <p class="border-gray" href="/">You don't have any reciprocity yet. Start searching for a soulmate to start chat history.</p>
            }
            else
            {
                foreach(Chat chat in @Model)
                {
                    <div class="media text-muted pt-3">
                        <img data-src="holder.js/32x32?theme=thumb&amp;bg=007bff&amp;fg=007bff&amp;size=1" alt="32x32" class="mr-2 rounded" style="width: 32px; height: 32px;" src="@chat.Blank.Photo" data-holder-rendered="true">
                        <p class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray" href="/">
                            <strong class="d-block text-gray-dark">@chat.Blank.FirstName @chat.Blank.SecondName</strong>
                            <a href="/Mail/Chat/@chat.Blank.Id" class="text-muted">
                                @if(chat.Messages is null)
                                {
                                    @message
                                }
                                else
                                {
                                    @Html.Raw(chat.Messages.Last().Text);
                                }
                            </a>
                        </p>
                        <p><strong class="d-block text-danger">
                            @CountUnreadMessages(chat)
                        </strong></p>
                    </div>
                }
            }
        }
</div>